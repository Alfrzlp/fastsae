// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// eblup_core_optimized
List eblup_core_optimized(const arma::mat& X, const arma::vec& y, const arma::vec& vardir, std::string method, int maxiter, double precision, bool return_fullP);
RcppExport SEXP _fastsae_eblup_core_optimized(SEXP XSEXP, SEXP ySEXP, SEXP vardirSEXP, SEXP methodSEXP, SEXP maxiterSEXP, SEXP precisionSEXP, SEXP return_fullPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type vardir(vardirSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type return_fullP(return_fullPSEXP);
    rcpp_result_gen = Rcpp::wrap(eblup_core_optimized(X, y, vardir, method, maxiter, precision, return_fullP));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fastsae_eblup_core_optimized", (DL_FUNC) &_fastsae_eblup_core_optimized, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_fastsae(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
